{"version":3,"sources":["images/birds.svg","images/404.svg","utils.js","components/Friends.js","components/Friend.js","components/Dashboard.js","components/PageNotFound.js","components/Form.js","components/Register.js","components/Auth.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","getCookie","name","match","document","cookie","RegExp","getHeaders","Authorization","Friends","path","useRouteMatch","useState","friends","setFriends","isFetched","setFetched","useEffect","axios","get","headers","then","res","data","className","map","friend","key","_id","to","id","src","profilePicDark","alt","Friend","useParams","history","useHistory","setIsFetched","setFriend","profilePicLight","location","parrotsOwned","length","favBirdQuote","onClick","goBack","Dashboard","Birds","PageNotFound","Bye","Form","picture","tempValue","toy","form","setForm","onChange","event","newForm","target","value","includes","slice","type","defaultChecked","elem","index","parrot","favoriteToys","split","push","rest","post","isDisabled","password","email","passwordRepeat","Register","error","setError","disabled","console","log","catch","err","response","message","Auth","token","App","exact","Boolean","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.029fc6e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/birds.947bf8a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.200fa0f2.svg\";","const COOKIE_NAME = 'parrotToken';\n\nexport const getCookie = (name = COOKIE_NAME) => {\n  const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));\n  if (match) return match[2];\n  return null;\n};\n\nexport const getHeaders = () => {\n  const cookie = getCookie(COOKIE_NAME);\n  if (cookie) {\n    return {\n      Authorization: cookie,\n    }\n  }\n  return {}\n};\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { getHeaders, getCookie } from '../utils';\n\nimport './Friends.css';\n\nfunction Friends() {\n  const { path } = useRouteMatch();\n  const [friends, setFriends] = useState([]);\n  const [isFetched, setFetched] = useState(false);\n\n  useEffect(() => {\n    if (isFetched) return;\n\n    axios.get('http://localhost:3000/users', {\n      headers: getHeaders(),\n    })\n      .then(res => {\n        setFriends(res.data);\n      });\n    setFetched(true);\n  },[friends, isFetched, setFetched, setFriends]);\n\n  const renderFriends = () => {\n    if (!getCookie()) return null;\n\n    return friends.map((friend) => {\n      return (\n        <li className=\"friend-preview\" key={friend._id} >\n          <Link to={`${path}/${friend.id}`}>\n            <img className=\"friend-preview__image\" src={friend.profilePicDark} alt=\"\"/>\n            <span className=\"friend-preview__name\">{friend.name}</span>\n          </Link>\n        </li>\n      )\n    })\n  }\n\n  return (\n      <div className=\"friends\">\n        <ul className=\"friends__list\">\n        {renderFriends()}\n        </ul>\n      </div>\n  );\n}\n\nexport default Friends;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport './Friend.css';\nimport {getHeaders} from '../utils';\n\nfunction Friend() {\n  const { id } = useParams();\n  const history = useHistory();\n  const [isFetched, setIsFetched] = useState(false);\n  const [friend, setFriend] = useState({});\n\n  useEffect(()=> {\n    if (isFetched) return;\n    axios.get(`http://localhost:3000/users/${id}`, {\n      headers: getHeaders(),\n    })\n      .then(res => {\n        setFriend(res.data)\n      })\n    setIsFetched(true)\n  },[isFetched, friend, setIsFetched, setFriend])\n\n  return (\n      <div className=\"friend\">\n        <div className=\"friend__card\">\n          <img className=\"friend__userpic\" src={friend.profilePicLight} alt={friend.name}/>\n          <div className=\"friend__details\">\n            <h3 className=\"friend__name\">{friend.name}</h3>\n            <p className=\"friend__location\">Местоположение: {friend.location}</p>\n            <p className=\"friend__quantity\">Количество домашних попугаев: {friend.parrotsOwned && friend.parrotsOwned.length}</p>\n            <p className=\"friend__fav-quote\">Любимое высказывание о птицах: \"{friend.favBirdQuote}\"</p>\n          </div>\n        </div>\n        <button className=\"button button_type_back\" onClick={() => history.goBack()} />\n      </div>\n  );\n}\n\nexport default Friend;\n\n\n","import React from 'react';\nimport './Dashboard.css';\nimport Birds from '../images/birds.svg';\n\nfunction Dashboard() {\n  \n  return (\n      <div className=\"dashboard\">\n        <img src={Birds} alt=\"\"/>\n      </div>\n  );\n}\n\nexport default Dashboard;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './PageNotFound.css';\nimport Bye from '../images/404.svg';\n\nfunction PageNotFound () {\n  return (\n    <div className=\"not-found\">\n      <h3 className=\"not-found__title\">\n       <span>404</span> - Страница не найдена\n      </h3>\n      <img className=\"not-found__image\" src={Bye} alt=\"\"/>\n      <p className=\"not-found__text\">\n       Ой, здесь ничего нет\n      </p>\n      <Link className=\"button button_type_to-main\" to=\"/\">Назад</Link>\n    </div>\n  )\n}\n\nexport default PageNotFound;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nimport './Form.css';\n\nconst PET_PREFIX = 'parrot_';\n\nfunction Form() {\n  const [form, setForm] = useState({ picture: 'mary', parrotsOwned: [], tempValue: { name: '', toy: '' } });\n  const history = useHistory();\n\n  const handleInputChange = (event) => {\n    const newForm = {...form};\n    const { name, value } = event.target;\n\n    if (name.includes(PET_PREFIX)) {\n      newForm.tempValue[name.slice(PET_PREFIX.length)] = value;\n    } else {\n      newForm[name] = value;\n    }\n    setForm(newForm);\n  };\n\n  const handleAddParrot = () => {\n    const newForm = {...form};\n\n    const parrot = {\n      name: form.tempValue.name,\n      favoriteToys: form.tempValue.toy.split(',')\n    };\n\n    newForm.parrotsOwned.push(parrot);\n    newForm.tempValue = { name: '', toy: '' };\n    setForm(newForm);\n  };\n\n  const handleFormSave = () => {\n    const { picture, tempValue, ...rest } = form;\n    const data = {\n      ...rest,\n      profilePicDark: `/profile-images/${picture}-dark.png`,\n      profilePicLight: `/profile-images/${picture}-light.png`,\n    }\n    axios.post('http://localhost:3000/users', data)\n      .then(res => {\n        history.push('/friends');\n      });\n  };\n\n  return (\n    <form className=\"form\" onChange={handleInputChange}>\n      <label className=\"form__label\">\n        Имя друга\n        <input type=\"text\" name=\"name\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Местоположение\n        <input type=\"text\" name=\"location\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Любимая цитата про попугов\n        <input type=\"text\" name=\"favBirdQuote\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Картинка 1\n        <input type=\"radio\" defaultChecked name=\"picture\" value=\"mary\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Картинка 2\n        <input type=\"radio\" name=\"picture\" value=\"bill\" className=\"form__input\" />\n      </label>\n      <hr className=\"form__divider\"/>\n      <ul>\n        {form.parrotsOwned.map((elem, index) => {\n          return <li key={elem.name + index}>{elem.name}</li>\n        })}\n      </ul>\n      <label className=\"form__label\">\n        Имя попугая\n        <input value={form.tempValue.name} type=\"text\" name=\"parrot_name\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Список любимых игрушек через запятую\n        <input value={form.tempValue.toy} type=\"text\" name=\"parrot_toy\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Добавить попугая\n        <button name=\"parrot_add\" type=\"button\" onClick={handleAddParrot}>+</button>\n      </label>\n      <hr className=\"form__divider\" />\n      <label className=\"form__label\">\n        Сохранить форму на сервер!\n        <button type=\"button\" onClick={handleFormSave}>Сохранить</button>\n      </label>\n    </form>\n  );\n}\n\nexport default Form;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst isDisabled = (form) => !form.password || !form.email || form.password !== form.passwordRepeat;\n\nfunction Register() {\n  const [form, setForm] = useState({ picture: 'mary', parrotsOwned: [], tempValue: { name: '', toy: '' } });\n  const [error, setError] = useState('');\n\n  const handleInputChange = (event) => {\n    setError('');\n    const newForm = {...form};\n    const { name, value } = event.target;\n\n    newForm[name] = value;\n    setForm(newForm);\n  };\n\n  const handleFormSave = () => {\n    const { picture, tempValue, ...rest } = form;\n    const data = {\n      ...rest,\n      profilePicDark: `/profile-images/${picture}-dark.png`,\n      profilePicLight: `/profile-images/${picture}-light.png`,\n    }\n    axios.post('http://localhost:3000/register', data)\n      .then(res => {\n        console.log(res, 'HERE IS RES FROMM SERVER')\n      })\n      .catch(err => {\n        setError(err.response.data.message);\n      });\n  };\n\n  return (\n    <form className=\"form\" onChange={handleInputChange}>\n      <label className=\"form__label\">\n        Email\n        <input type=\"text\" name=\"email\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Password\n        <input type=\"password\" name=\"password\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Password repeat\n        <input type=\"password\" name=\"passwordRepeat\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Сохранить форму на сервер!\n        <button type=\"button\" disabled={isDisabled(form)} onClick={handleFormSave}>Зарегистрироваться</button>\n      </label>\n      <span className=\"form__error\">{error}</span>\n    </form>\n  )\n}\n\nexport default Register;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction Auth() {\n  const [form, setForm] = useState({});\n  const [error, setError] = useState('');\n\n  const handleInputChange = (event) => {\n    const newForm = {...form};\n    const { name, value } = event.target;\n\n    newForm[name] = value;\n    setForm(newForm);\n    setError('');\n  };\n\n  const handleFormSave = () => {\n    const { picture, tempValue, ...rest } = form;\n    const data = {\n      ...rest,\n      profilePicDark: `/profile-images/${picture}-dark.png`,\n      profilePicLight: `/profile-images/${picture}-light.png`,\n    }\n    axios.post('http://localhost:3000/auth', data)\n      .then(res => {\n        if (res.data.token) {\n          document.cookie = `parrotToken=${res.data.token}`;\n        }\n      })\n      .catch(err => {\n        setError(err.response.data.message);\n      });\n  };\n\n  return (\n    <form className=\"form\" onChange={handleInputChange}>\n      <label className=\"form__label\">\n        Email\n        <input type=\"text\" name=\"email\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Password\n        <input type=\"password\" name=\"password\" className=\"form__input\" />\n      </label>\n      <label className=\"form__label\">\n        Отправить форму на сервер!\n        <button type=\"button\" disabled={!form.password || !form.email} onClick={handleFormSave}>Войти</button>\n      </label>\n      <span className=\"form__error\">{error}</span>\n    </form>\n  )\n}\n\nexport default Auth;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, NavLink, Route, Switch } from 'react-router-dom';\nimport Friends from './Friends';\nimport Friend from './Friend';\nimport Dashboard from './Dashboard';\nimport PageNotFound from './PageNotFound';\nimport Form from './Form';\nimport Register from './Register';\nimport Auth from './Auth';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className='App'>\n        <header className=\"header\">\n          <NavLink to='/' className=\"header__logo\">Parrot Friendship Society</NavLink>\n          <nav className=\"menu\">\n            <ul className=\"menu__list\">\n              <li className=\"menu__list-item\"><NavLink className=\"menu__link\" to='/friends'>Друзья</NavLink></li>\n              <li className=\"menu__list-item\"><NavLink className=\"menu__link\" to='/create'>Новый друг</NavLink></li>\n              <li className=\"menu__list-item\"><NavLink className=\"menu__link\" to='/register'>Зарегистрироваться</NavLink></li>\n              <li className=\"menu__list-item\"><NavLink className=\"menu__link\" to='/auth'>Авторизоваться</NavLink></li>\n            </ul>\n          </nav>\n        </header>\n        <Switch>\n          <Route exact path={['/', '/index.html']}>\n            <Dashboard />\n          </Route>\n          <Route exact path='/friends'>\n            <Friends />\n          </Route>\n          <Route path='/friends/:id'>\n            <Friend />\n          </Route>\n          <Route path='/create'>\n            <Form />\n          </Route>\n          <Route path='/register'>\n            <Register />\n          </Route>\n          <Route path='/auth'>\n            <Auth />\n          </Route>\n          <Route path='*'>\n            <PageNotFound />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}